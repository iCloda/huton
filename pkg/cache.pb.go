// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cache.proto

package huton

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CacheSet struct {
	CacheName            string   `protobuf:"bytes,1,opt,name=cache_name,json=cacheName,proto3" json:"cache_name,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheSet) Reset()         { *m = CacheSet{} }
func (m *CacheSet) String() string { return proto.CompactTextString(m) }
func (*CacheSet) ProtoMessage()    {}
func (*CacheSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fca3b110c9bbf3a, []int{0}
}

func (m *CacheSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheSet.Unmarshal(m, b)
}
func (m *CacheSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheSet.Marshal(b, m, deterministic)
}
func (m *CacheSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheSet.Merge(m, src)
}
func (m *CacheSet) XXX_Size() int {
	return xxx_messageInfo_CacheSet.Size(m)
}
func (m *CacheSet) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheSet.DiscardUnknown(m)
}

var xxx_messageInfo_CacheSet proto.InternalMessageInfo

func (m *CacheSet) GetCacheName() string {
	if m != nil {
		return m.CacheName
	}
	return ""
}

func (m *CacheSet) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CacheSet) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type CacheDel struct {
	CacheName            string   `protobuf:"bytes,1,opt,name=cache_name,json=cacheName,proto3" json:"cache_name,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheDel) Reset()         { *m = CacheDel{} }
func (m *CacheDel) String() string { return proto.CompactTextString(m) }
func (*CacheDel) ProtoMessage()    {}
func (*CacheDel) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fca3b110c9bbf3a, []int{1}
}

func (m *CacheDel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheDel.Unmarshal(m, b)
}
func (m *CacheDel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheDel.Marshal(b, m, deterministic)
}
func (m *CacheDel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheDel.Merge(m, src)
}
func (m *CacheDel) XXX_Size() int {
	return xxx_messageInfo_CacheDel.Size(m)
}
func (m *CacheDel) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheDel.DiscardUnknown(m)
}

var xxx_messageInfo_CacheDel proto.InternalMessageInfo

func (m *CacheDel) GetCacheName() string {
	if m != nil {
		return m.CacheName
	}
	return ""
}

func (m *CacheDel) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CacheDel) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type CacheSetResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheSetResp) Reset()         { *m = CacheSetResp{} }
func (m *CacheSetResp) String() string { return proto.CompactTextString(m) }
func (*CacheSetResp) ProtoMessage()    {}
func (*CacheSetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fca3b110c9bbf3a, []int{2}
}

func (m *CacheSetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheSetResp.Unmarshal(m, b)
}
func (m *CacheSetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheSetResp.Marshal(b, m, deterministic)
}
func (m *CacheSetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheSetResp.Merge(m, src)
}
func (m *CacheSetResp) XXX_Size() int {
	return xxx_messageInfo_CacheSetResp.Size(m)
}
func (m *CacheSetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheSetResp.DiscardUnknown(m)
}

var xxx_messageInfo_CacheSetResp proto.InternalMessageInfo

type CacheDelResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheDelResp) Reset()         { *m = CacheDelResp{} }
func (m *CacheDelResp) String() string { return proto.CompactTextString(m) }
func (*CacheDelResp) ProtoMessage()    {}
func (*CacheDelResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fca3b110c9bbf3a, []int{3}
}

func (m *CacheDelResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheDelResp.Unmarshal(m, b)
}
func (m *CacheDelResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheDelResp.Marshal(b, m, deterministic)
}
func (m *CacheDelResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheDelResp.Merge(m, src)
}
func (m *CacheDelResp) XXX_Size() int {
	return xxx_messageInfo_CacheDelResp.Size(m)
}
func (m *CacheDelResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheDelResp.DiscardUnknown(m)
}

var xxx_messageInfo_CacheDelResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CacheSet)(nil), "huton.CacheSet")
	proto.RegisterType((*CacheDel)(nil), "huton.CacheDel")
	proto.RegisterType((*CacheSetResp)(nil), "huton.CacheSetResp")
	proto.RegisterType((*CacheDelResp)(nil), "huton.CacheDelResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CacheClient is the client API for Cache service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CacheClient interface {
	Set(ctx context.Context, in *CacheSet, opts ...grpc.CallOption) (*CacheSetResp, error)
	Del(ctx context.Context, in *CacheDel, opts ...grpc.CallOption) (*CacheDelResp, error)
}

type cacheClient struct {
	cc *grpc.ClientConn
}

func NewCacheClient(cc *grpc.ClientConn) CacheClient {
	return &cacheClient{cc}
}

func (c *cacheClient) Set(ctx context.Context, in *CacheSet, opts ...grpc.CallOption) (*CacheSetResp, error) {
	out := new(CacheSetResp)
	err := c.cc.Invoke(ctx, "/huton.Cache/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) Del(ctx context.Context, in *CacheDel, opts ...grpc.CallOption) (*CacheDelResp, error) {
	out := new(CacheDelResp)
	err := c.cc.Invoke(ctx, "/huton.Cache/Del", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CacheServer is the server API for Cache service.
type CacheServer interface {
	Set(context.Context, *CacheSet) (*CacheSetResp, error)
	Del(context.Context, *CacheDel) (*CacheDelResp, error)
}

func RegisterCacheServer(s *grpc.Server, srv CacheServer) {
	s.RegisterService(&_Cache_serviceDesc, srv)
}

func _Cache_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CacheSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/huton.Cache/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).Set(ctx, req.(*CacheSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_Del_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CacheDel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).Del(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/huton.Cache/Del",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).Del(ctx, req.(*CacheDel))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cache_serviceDesc = grpc.ServiceDesc{
	ServiceName: "huton.Cache",
	HandlerType: (*CacheServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Set",
			Handler:    _Cache_Set_Handler,
		},
		{
			MethodName: "Del",
			Handler:    _Cache_Del_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cache.proto",
}

func init() { proto.RegisterFile("cache.proto", fileDescriptor_5fca3b110c9bbf3a) }

var fileDescriptor_5fca3b110c9bbf3a = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x4e, 0x4c, 0xce,
	0x48, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcd, 0x28, 0x2d, 0xc9, 0xcf, 0x53, 0x0a,
	0xe4, 0xe2, 0x70, 0x06, 0x89, 0x06, 0xa7, 0x96, 0x08, 0xc9, 0x72, 0x71, 0x81, 0x55, 0xc4, 0xe7,
	0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x71, 0x82, 0x45, 0xfc, 0x12, 0x73,
	0x53, 0x85, 0x04, 0xb8, 0x98, 0xb3, 0x53, 0x2b, 0x25, 0x98, 0x14, 0x18, 0x35, 0x78, 0x82, 0x40,
	0x4c, 0x21, 0x11, 0x2e, 0xd6, 0xb2, 0xc4, 0x9c, 0xd2, 0x54, 0x09, 0x66, 0xb0, 0x18, 0x84, 0x03,
	0x37, 0xd2, 0x25, 0x35, 0x87, 0x5a, 0x46, 0xf2, 0x71, 0xf1, 0xc0, 0x5c, 0x19, 0x94, 0x5a, 0x5c,
	0x00, 0xe7, 0xbb, 0xa4, 0xe6, 0x80, 0xf8, 0x46, 0x89, 0x5c, 0xac, 0x60, 0xbe, 0x90, 0x36, 0x17,
	0x33, 0xc8, 0x27, 0xfc, 0x7a, 0x60, 0xdf, 0xe9, 0xc1, 0x34, 0x49, 0x09, 0xa3, 0x09, 0x80, 0x74,
	0x81, 0x14, 0x83, 0xdc, 0x88, 0xa2, 0xd8, 0x25, 0x35, 0x07, 0x55, 0x31, 0xd4, 0x8a, 0x24, 0x36,
	0x70, 0xb0, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x0a, 0x1b, 0x3a, 0x5e, 0x45, 0x01, 0x00,
	0x00,
}
