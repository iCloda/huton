// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transport.proto

package swarm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	raftpb "go.etcd.io/etcd/raft/raftpb"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EmptyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyResponse) Reset()         { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()    {}
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a97e32c760ec1b28, []int{0}
}

func (m *EmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyResponse.Unmarshal(m, b)
}
func (m *EmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyResponse.Marshal(b, m, deterministic)
}
func (m *EmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResponse.Merge(m, src)
}
func (m *EmptyResponse) XXX_Size() int {
	return xxx_messageInfo_EmptyResponse.Size(m)
}
func (m *EmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*EmptyResponse)(nil), "swarm.EmptyResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RaftTransportClient is the client API for RaftTransport service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftTransportClient interface {
	Send(ctx context.Context, in *raftpb.Message, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type raftTransportClient struct {
	cc *grpc.ClientConn
}

func NewRaftTransportClient(cc *grpc.ClientConn) RaftTransportClient {
	return &raftTransportClient{cc}
}

func (c *raftTransportClient) Send(ctx context.Context, in *raftpb.Message, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/swarm.RaftTransport/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RaftTransportServer is the server API for RaftTransport service.
type RaftTransportServer interface {
	Send(context.Context, *raftpb.Message) (*EmptyResponse, error)
}

func RegisterRaftTransportServer(s *grpc.Server, srv RaftTransportServer) {
	s.RegisterService(&_RaftTransport_serviceDesc, srv)
}

func _RaftTransport_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(raftpb.Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftTransportServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swarm.RaftTransport/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftTransportServer).Send(ctx, req.(*raftpb.Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _RaftTransport_serviceDesc = grpc.ServiceDesc{
	ServiceName: "swarm.RaftTransport",
	HandlerType: (*RaftTransportServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _RaftTransport_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transport.proto",
}

func init() { proto.RegisterFile("transport.proto", fileDescriptor_a97e32c760ec1b28) }

var fileDescriptor_a97e32c760ec1b28 = []byte{
	// 139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x29, 0x4a, 0xcc,
	0x2b, 0x2e, 0xc8, 0x2f, 0x2a, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2d, 0x2e, 0x4f,
	0x2c, 0xca, 0x95, 0x52, 0x4b, 0xcf, 0xd7, 0x4b, 0x2d, 0x49, 0x4e, 0xd1, 0xcb, 0xcc, 0xd7, 0x07,
	0xd1, 0xfa, 0x45, 0x89, 0x69, 0x25, 0x60, 0xa2, 0x20, 0x09, 0x4c, 0x41, 0x94, 0x2b, 0xf1, 0x73,
	0xf1, 0xba, 0xe6, 0x16, 0x94, 0x54, 0x06, 0xa5, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x1a, 0x39,
	0x70, 0xf1, 0x06, 0x25, 0xa6, 0x95, 0x84, 0xc0, 0x8c, 0x15, 0xd2, 0xe7, 0x62, 0x09, 0x4e, 0xcd,
	0x4b, 0x11, 0xe2, 0xd7, 0x83, 0xe8, 0xd6, 0xf3, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x95, 0x12,
	0xd1, 0x03, 0x5b, 0xa5, 0x87, 0xa2, 0x5f, 0x89, 0x21, 0x89, 0x0d, 0x6c, 0xb2, 0x31, 0x20, 0x00,
	0x00, 0xff, 0xff, 0x54, 0xc3, 0xcc, 0x9f, 0x9b, 0x00, 0x00, 0x00,
}
